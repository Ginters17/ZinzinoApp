// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyApp.Models;

#nullable disable

namespace MyApp.Migrations
{
    [DbContext(typeof(MyAppDbContext))]
    [Migration("20241102154453_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyApp.Models.DomainModels.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressLine1 = "Saules iela 10",
                            City = "Sigulda",
                            Date = new DateTime(2024, 11, 2, 17, 44, 53, 343, DateTimeKind.Local).AddTicks(9756),
                            State = "Latvia",
                            UserId = 1,
                            ZipCode = "LV-2158"
                        },
                        new
                        {
                            Id = 2,
                            AddressLine1 = "Mēness iela 2",
                            City = "Cēsis",
                            Date = new DateTime(2024, 11, 2, 17, 44, 53, 343, DateTimeKind.Local).AddTicks(9762),
                            State = "Latvia",
                            UserId = 2,
                            ZipCode = "LV-4101"
                        });
                });

            modelBuilder.Entity("MyApp.Models.DomainModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 11, 2, 17, 44, 53, 343, DateTimeKind.Local).AddTicks(9639),
                            EmailAddress = "ginters@example.com",
                            Password = "P@ssword1",
                            Username = "ginters"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 11, 2, 17, 44, 53, 343, DateTimeKind.Local).AddTicks(9683),
                            EmailAddress = "janis@example.com",
                            Password = "P@ssword1",
                            Username = "janis"
                        });
                });

            modelBuilder.Entity("MyApp.Models.DomainModels.Address", b =>
                {
                    b.HasOne("MyApp.Models.DomainModels.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyApp.Models.DomainModels.User", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
